{"title":"pwnable.tw-calc","date":"2018-05-07T07:07:02.000Z","slug":"pwnable-tw-calc","updated":"2018-07-03T08:18:36.000Z","content":"<h3 id=\"calc\"><a href=\"#calc\" class=\"headerlink\" title=\"calc\"></a>calc</h3><p>这道题目的点还是很难catch到的，通过分析calc的整个布局才能抓到点，因为参考了别人的writeup，这里只贴一下分析的代码好了。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">parse_expr</span><span class=\"params\">(<span class=\"keyword\">char</span> *p_original_expression, pool_struct *p_pool_v1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *v2; <span class=\"comment\">// ST2C_4</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> *p_original_expression2; <span class=\"comment\">// [esp+20h] [ebp-88h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i; <span class=\"comment\">// [esp+24h] [ebp-84h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v7; <span class=\"comment\">// [esp+28h] [ebp-80h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> *s1; <span class=\"comment\">// [esp+30h] [ebp-78h]</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> v9; <span class=\"comment\">// [esp+34h] [ebp-74h]</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> s[<span class=\"number\">100</span>]; <span class=\"comment\">// [esp+38h] [ebp-70h]</span></span><br><span class=\"line\">  <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v11; <span class=\"comment\">// [esp+9Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v11 = __readgsdword(<span class=\"number\">0x14</span>u);</span><br><span class=\"line\">  p_original_expression2 = p_original_expression;</span><br><span class=\"line\">  v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  bzero(s, <span class=\"number\">0x64</span>u);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)(p_original_expression[i] - <span class=\"string\">'0'</span>) &gt; <span class=\"number\">9</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v2 = (<span class=\"keyword\">char</span> *)(&amp;p_original_expression[i] - p_original_expression2);<span class=\"comment\">// 提取运算数</span></span><br><span class=\"line\">      s1 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(v2 + <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"built_in\">memcpy</span>(s1, p_original_expression2, v2);</span><br><span class=\"line\">      s1[(_DWORD)v2] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(s1, <span class=\"string\">\"0\"</span>) )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">\"prevent division by zero\"</span>);</span><br><span class=\"line\">        fflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      v9 = atoi(s1);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v9 &gt; <span class=\"number\">0</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v4 = p_pool_v1-&gt;expr_count++;</span><br><span class=\"line\">        *(&amp;p_pool_v1-&gt;expr1 + v4) = v9;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( p_original_expression[i] &amp;&amp; (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)(p_original_expression[i + <span class=\"number\">1</span>] - <span class=\"number\">48</span>) &gt; <span class=\"number\">9</span> )<span class=\"comment\">// 运算符没有右运算数</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">\"expression error!\"</span>);</span><br><span class=\"line\">        fflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      p_original_expression2 = &amp;p_original_expression[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( s[v7] )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> ( p_original_expression[i] )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">'%'</span>:</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">'*'</span>:</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">'/'</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( s[v7] != <span class=\"string\">'+'</span> &amp;&amp; s[v7] != <span class=\"string\">'-'</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              eval((<span class=\"keyword\">int</span>)p_pool_v1, s[v7]);</span><br><span class=\"line\">              s[v7] = p_original_expression[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              s[++v7] = p_original_expression[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">'+'</span>:</span><br><span class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">'-'</span>:</span><br><span class=\"line\">            eval((<span class=\"keyword\">int</span>)p_pool_v1, s[v7]);</span><br><span class=\"line\">            s[v7] = p_original_expression[i];</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            eval((<span class=\"keyword\">int</span>)p_pool_v1, s[v7--]);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        s[v7] = p_original_expression[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( !p_original_expression[i] )</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v7 &gt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">    eval((<span class=\"keyword\">int</span>)p_pool_v1, s[v7--]);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>有问题的地方在eval函数里面，<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">eval</span><span class=\"params\">(<span class=\"keyword\">int</span> a1, <span class=\"keyword\">char</span> oper)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( oper == <span class=\"string\">'+'</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">2</span>) + <span class=\"number\">4</span>) += *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">1</span>) + <span class=\"number\">4</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( oper &gt; <span class=\"string\">'+'</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( oper == <span class=\"string\">'-'</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">2</span>) + <span class=\"number\">4</span>) -= *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">1</span>) + <span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( oper == <span class=\"string\">'/'</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">2</span>) + <span class=\"number\">4</span>) /= *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">1</span>) + <span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( oper == <span class=\"string\">'*'</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">2</span>) + <span class=\"number\">4</span>) *= *(_DWORD *)(a1 + <span class=\"number\">4</span> * (*(_DWORD *)a1 - <span class=\"number\">1</span>) + <span class=\"number\">4</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  result = a1;</span><br><span class=\"line\">  --*(_DWORD *)a1;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>当我们输入+100这样的值的时候，其实是可以暴露v2[99]的值，然后再通过+100+300这种表达式是可以向v2[99]中写入400该值的，通过这种方式我们可以更改栈上的数据，因为程序是静态连接的，所以我们只能通过int 80的系统调用来进行shell的获取。</p>\n<p>布置栈上的数据如下：<br><img src=\"/img/14925270013675.png\" alt=\"14925270013675.png\"></p>\n<p>即可获取shell。</p>\n","prev":{"title":"Asis CTF 2016 b00ks","slug":"Asis-CTF-2016-b00ks"},"next":{"title":"Z3Py在CTF逆向中的使用","slug":"Z3Py在CTF逆向中的使用"},"link":"https://foyjog.github.io/post/pwnable-tw-calc/"}